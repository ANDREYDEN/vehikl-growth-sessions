version: '3'
services:
  app:
    build:
      args:
        user: mogo
        uid: 1000
      context: ./
      dockerfile: docker/app/Dockerfile
    image: growth-app
    depends_on:
      - files
    container_name: growth-app-php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - project:/var/www

  yarn:
    image: node:18.13
    depends_on:
      - files
    volumes:
      - project:/app
    working_dir: /app
    entrypoint: yarn
    environment:
      - TZ=America/Toronto

  composer:
    image: growth-app
    depends_on:
      - files
    environment:
      - COMPOSER_CACHE_DIR=/app/var/cache/composer
    restart: "no"
    user: root
    volumes:
      - project:/app
    working_dir: /app
    entrypoint: composer

  jest:
    image: node:18.13
    depends_on:
      - files
    volumes:
      - project:/app
    working_dir: /app
    entrypoint: npm run test
    environment:
      - TZ=America/Toronto

  artisan:
    image: growth-app
    depends_on:
      - db
      - files
    user: root
    volumes:
      - project:/app
    working_dir: /app
    entrypoint: php artisan

  phpunit:
    image: growth-app
    depends_on:
      - files
    user: root
    volumes:
      - project:/var/www
    entrypoint: vendor/bin/phpunit

  db:
    image: mysql:8.0.29
    depends_on:
      - files
    container_name: growth-app-db
    restart: unless-stopped
    ports:
      - 13306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - project:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/

  nginx:
    image: nginx:alpine
    depends_on:
      - files
    container_name: growth-app-nginx
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - project:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/

  files:
    image: alpine:latest
    container_name: growth-app-files
    entrypoint: top
    restart: unless-stopped
    volumes:
      - project:/project

volumes:
  project:
